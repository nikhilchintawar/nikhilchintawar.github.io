{"version":3,"sources":["components/header/Menu.js","components/header/Header.js","components/home/Home.js","components/spinner/Spinner.js","components/projects/Project.js","App.js","serviceWorker.js","index.js"],"names":["Menu","className","activeClass","spy","smooth","to","duration","delay","href","Header","useState","hidden","setHidden","dropdown","size","onClick","Home","id","options","strings","autoStart","loop","target","rel","title","Spinner","Project","githubData","setGithubData","fetchGithubRepos","a","Axios","get","data","reposWithUrl","filter","filterData","homepage","console","log","useEffect","map","key","uuidv4","name","description","html_url","AboutMe","lazy","Background","ParallaxEffect","Currently","Experience","Contact","App","path","component","exact","fallback","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.153499dc.chunk.js","sourcesContent":["import React from \"react\";\nimport {Link} from \"react-scroll\";\nimport \"./menu.styles.css\";\n\nconst Menu = () => {\n    return(\n            <div className=\"mobile-options\">\n                <Link \n                    className=\"mobile-option\" \n                    activeClass=\"active\" \n                    spy={true} \n                    smooth={true} \n                    to=\"homeLink\"\n                    duration={1000}\n                    delay={200}\n                     >\n                    HOME\n                </Link>\n                <Link \n                    className=\"mobile-option\" \n                    activeClass=\"active\" \n                    spy={true} \n                    smooth={true} \n                    to=\"aboutMeLink\"\n                    duration={1000}\n                    delay={200} >\n                    ABOUT ME\n                </Link>\n                <Link \n                    className=\"mobile-option\" \n                    activeClass=\"active\" \n                    spy={true} \n                    smooth={true} \n                    to=\"backgroundLink\"\n                    duration={1000}\n                    delay={200} >\n                    BACKGROUND\n                </Link>\n                <Link \n                    className=\"mobile-option\" \n                    activeClass=\"active\" \n                    spy={true} \n                    smooth={true} \n                    to=\"experienceLink\"\n                    duration={1000}\n                    delay={200} >\n                    EXPERIENCE\n                </Link>\n                {/* link goes to another page */}\n                <a href=\"/projects\" className='mobile-option'>PROJECTS</a>\n                <Link \n                    className=\"mobile-option\"\n                    activeClass=\"active\" \n                    spy={true} \n                    smooth={true} \n                    to=\"contactLink\"\n                    duration={1000}\n                    delay={200} >\n                    CONTACT\n                </Link>\n        </div>\n    )\n}\n\nexport default Menu;","import React, {useState} from 'react';\nimport {GiHamburgerMenu} from \"react-icons/gi\";\nimport {RiCloseLine} from \"react-icons/ri\";\nimport {Link} from \"react-scroll\";\n\n\nimport \"./header.styles.css\";\nimport Menu from \"./Menu\";\n\nconst Header = () => {\n\n    const [hidden, setHidden] = useState(true);\n\n    const dropdown = () => {\n        setHidden(!hidden)\n    }\n\n    return (\n        <div>\n        <div className=\"header header-desktop\">\n            <Link \n                className=\"logo-container\" \n                spy={true} \n                smooth={true} \n                to=\"homeLink\"\n                duration={1000}\n                delay={200} >\n                <span>Nikhil Chintawar</span>\n            </Link>\n            <div className=\"options\">\n                <Link \n                    className=\"option\" \n                    activeClass=\"active\" \n                    spy={true} \n                    smooth={true} \n                    to=\"homeLink\"\n                    duration={1000}\n                    delay={200}\n                     >\n                    HOME\n                </Link>\n                <Link \n                    className=\"option\" \n                    activeClass=\"active\" \n                    spy={true} \n                    smooth={true} \n                    to=\"aboutMeLink\"\n                    duration={1000}\n                    delay={200} >\n                    ABOUT \n                </Link>\n                <Link \n                    className=\"option\" \n                    activeClass=\"active\" \n                    spy={true} \n                    smooth={true} \n                    to=\"backgroundLink\"\n                    duration={1000}\n                    delay={200} >\n                    BACKGROUND\n                </Link>\n                <Link \n                    className=\"option\" \n                    activeClass=\"active\" \n                    spy={true} \n                    smooth={true} \n                    to=\"experienceLink\"\n                    duration={1000}\n                    delay={200} >\n                    EXPERIENCE\n                </Link>\n                {/* link goes to another page */}\n                <a href=\"/projects\" className='option'>PROJECTS</a>\n                <Link \n                    className=\"option\"\n                    activeClass=\"active\" \n                    spy={true} \n                    smooth={true} \n                    to=\"contactLink\"\n                    duration={1000}\n                    delay={200} >\n                    CONTACT\n                </Link>\n        </div>\n        </div>\n        \n        {/* header-mobile */}\n        <div className=\"header-mobile\">\n        <div className=\"header\">\n            <Link \n                className=\"logo-container\" \n                spy={true} \n                smooth={true} \n                to=\"homeLink\"\n                duration={1000}\n                delay={200} >\n                <span>Nikhil Chintawar</span>\n            </Link>\n\n        <div className=\"haburger\">\n        {\n            hidden ? <GiHamburgerMenu size={30} onClick={dropdown} /> : <RiCloseLine size={30} onClick={dropdown} />        \n        }\n        </div>\n            {\n                hidden ? null : <Menu />\n            }     \n        </div>\n        </div>\n        </div>\n    );\n};\n\nexport default Header;","import React from 'react';\nimport {FaLinkedin, FaGithub, FaTwitterSquare} from \"react-icons/fa\";\nimport Typewriter from \"typewriter-effect\";\n\nimport \"./home.styles.css\"\n\nconst Home = ({id}) => {\n\n    return (\n        <div className=\"home\" id={id} >\n            <div className=\"home-content\">\n                <h1>I'm Nikhil Chintawar</h1>\n                <span className=\"subtitle\">\n                    <Typewriter \n                        options={{\n                            strings: [\"Web Developer\", \"Computer Science Student\"],\n                            autoStart: true,\n                            loop: true\n                        }}\n                    />\n                </span>\n                <span className=\"links\">\n                    <a target=\"_blank\" rel=\"noopener noreferrer\" title=\"Linkedin\" href=\"https://www.linkedin.com/in/nikhilchintawar/\">\n                        <FaLinkedin />\n                    </a>\n                    <a target=\"_blank\" rel=\"noopener noreferrer\" title=\"Github\" href=\"https://github.com/nikhilchintawar\">\n                        <FaGithub />\n                    </a>\n                    <a target=\"_blank\" rel=\"noopener noreferrer\" title=\"Twitter\" href=\"https://twitter.com/itsChintawar\">\n                        <FaTwitterSquare />\n                    </a>\n                </span>\n            </div>\n        </div>\n    );\n};\n\nexport default Home;","import React from 'react';\nimport \"./spinner.styles.css\";\n\nconst Spinner = () => {\n    return (\n        <div className=\"spinner\">\n            <div className=\"spinner-container\" />\n        </div>\n    );\n};\n\nexport default Spinner;","import React, { useEffect, useState } from 'react';\nimport Axios from 'axios';\nimport {v4 as uuidv4} from \"uuid\";\nimport { Link } from 'react-router-dom';\n\nimport \"./project.styles.css\";\n\nconst Project = () => {\n    const [githubData, setGithubData] = useState([])\n\n    const fetchGithubRepos = async() =>{\n        try{\n            const {data} = await Axios.get('https://api.github.com/users/nikhilchintawar/repos');\n            \n            const reposWithUrl = data.filter(filterData => {\n              return filterData.homepage !== null;\n            })\n\n            console.log(reposWithUrl)\n            setGithubData(reposWithUrl)\n\n        }catch(error){\n            console.log(error)\n        }       \n    } \n\n    useEffect(() => {\n        fetchGithubRepos()\n    },[])\n\n    return (\n        <div>\n          <Link to='/' className=\"header\">\n              <span className=\"logo-container\">Nikhil Chintawar</span>\n              <span className=\"options\">Homepage</span>\n          </Link>\n            <h2 className=\"title\">PROJECTS</h2>\n            <div className=\"project\">\n          {\n              githubData.map(data => {\n                  return (\n                    <div key={uuidv4()} className=\"github-project-card\">\n                        <h3 className=\"github-project-title\">{data.name}</h3>\n                        <p className=\"github-project-description\">{data.description}</p>\n                        <div className=\"github-project-link\">\n                            <Link to={data.html_url} target=\"_blank\" rel=\"noopener noreferrer\"><span className=\"github-project-source\">SOURCE CODE</span></Link>\n                            <Link to={data.homepage} target=\"_blank\" rel=\"noopener noreferrer\"><span className=\"github-project-source\">SEE LIVE</span></Link>\n                        </div>\n                    </div>\n                      \n                  )\n              })\n          }\n          </div>\n        </div>\n    );\n};\n\nexport default Project;","import React, { lazy, Suspense } from 'react';\n\n\nimport './App.css';\nimport Header from './components/header/Header';\nimport Home from './components/home/Home';\nimport Spinner from './components/spinner/Spinner';\nimport { Route, Switch } from 'react-router-dom';\nimport Project from './components/projects/Project';\n\n\nconst AboutMe = lazy(() => import('./components/about-me/AboutMe'));\nconst Background = lazy(() => import('./components/background/Background'));\nconst ParallaxEffect = lazy(() => import('./parallax/ParallaxEffect'));\nconst Currently = lazy(() => import('./components/currently/Currently'));\nconst Experience = lazy(() => import('./components/experience/Experience'));\nconst Contact = lazy(() => import('./components/contact/Contact'));\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    <Switch>\n      <Route path=\"/projects\" component={Project} />\n\n      <Route exact path='/'>\n        <Header />\n          <Suspense fallback={<Spinner />}>\n          <Home id=\"homeLink\" />\n\n          <ParallaxEffect>\n            <AboutMe id=\"aboutMeLink\" />\n          </ParallaxEffect>\n\n          <Background id=\"backgroundLink\" />\n\n          <ParallaxEffect>\n            <Currently />\n          </ParallaxEffect>\n\n          <Experience id=\"experienceLink\" />\n\n          {/* <Project id=\"projectLink\" /> */}\n\n          <ParallaxEffect>\n            <Contact id=\"contactLink\" />\n          </ParallaxEffect>\n\n          </Suspense>\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\n\nReactDOM.render(\n  <BrowserRouter>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </BrowserRouter>\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}